import os
import random
import zipfile
import requests
import telebot
from io import BytesIO
from PIL import Image
import time


TOKEN = '6716371250:AAEJX98SgwI9s7sI-uST0v1SbooixGqsZ24'
bot = telebot.TeleBot(TOKEN)

API_URL = "https://vxhn7elexbvw3fjd.us-east-1.aws.endpoints.huggingface.cloud"
headers = {
    "Accept": "image/png",
    "Authorization": "Bearer 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",
    "Content-Type": "application/json"
}

def query(payload):
    start_time = time.time()
    response = requests.post(API_URL, headers=headers, json=payload)
    end_time = time.time()
    time_taken = end_time - start_time
    return response.content, time_taken

def get_random_prompts():
    with open("character.txt", "r") as file:
        lines = file.readlines()
        prompts = random.sample(lines, 5)
    return prompts

@bot.message_handler(commands=['prompt'])
def handle_prompt(message):
    prompts = get_random_prompts()
    formatted_prompts = "\n".join([f"- `{prompt.strip()}`" for prompt in prompts])
    bot.send_message(message.chat.id, f"Here are your random prompts:\n{formatted_prompts}", parse_mode='Markdown')

@bot.message_handler(commands=['imagine'])
def handle_imagine(message):
    user_prompt = message.text.split('/imagine ', 1)[1] if '/imagine ' in message.text else ''
    user_id = message.from_user.id
    user_folder = f"{user_id}pics"
    if not os.path.exists(user_folder):
        os.makedirs(user_folder)
    try:
        output, time_taken = query({
            "inputs": user_prompt,
            "parameters": {
                "negative_prompt": "(low quality, worst quality:1.4), (bad anatomy), (inaccurate limb:1.2), bad composition, inaccurate eyes, extra digit, fewer digits, (extra arms:1.2)"
            }
        })
        image = Image.open(BytesIO(output))
        image_path = os.path.join(user_folder, f"{time.time()}.png")
        image.save(image_path)
        caption = f"*Prompt*: `{user_prompt}`\n" \
                  f"*Time Taken*: `{time_taken:.2f} seconds`\n" \
                  f"*Generated by*: @{message.from_user.username}"
        with open(image_path, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=caption, parse_mode='Markdown')
    except requests.exceptions.ReadTimeout:
        bot.send_message(message.chat.id, "The request timed out. Please try again later.")
    except Exception as e:
        bot.send_message(message.chat.id, f"An error occurred: {str(e)}")

@bot.message_handler(commands=['zip'])
def handle_zip(message):
    user_id = message.from_user.id
    user_folder = f"{user_id}pics"
    zip_path = f"{user_folder}.zip"
    with zipfile.ZipFile(zip_path, 'w') as zipf:
        for root, dirs, files in os.walk(user_folder):
            for file in files:
                zipf.write(os.path.join(root, file), file)
    with open(zip_path, 'rb') as zipf:
        bot.send_document(message.chat.id, zipf)
    os.remove(zip_path)

try:
    bot.polling(none_stop=True, timeout=60)
except Exception as e:
    print(f"Bot polling failed due to an exception: {e}")